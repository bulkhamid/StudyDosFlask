{
  "info": {
    "_postman_id": "a1234567-89ab-cdef-0123-456789abcdef",
    "name": "StudyDos API Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Postman collection for testing the StudyDos API endpoints for the DL4DS course."
  },
  "item": [
    {
      "name": "Study Plan Request",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"query\": \"I need a 10-day study plan for DL4DS.\",\n  \"course_material\": \"Some optional course material.\"\n}"
        },
        "url": {
          "raw": "http://127.0.0.1:8000/assistant",
          "protocol": "http",
          "host": [
            "127",
            "0",
            "0",
            "1"
          ],
          "port": "8000",
          "path": [
            "assistant"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response contains study plan details\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.response).to.include(\"Day 1:\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Assignment Hint Request",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"query\": \"Can you give me a hint on how to approach the assignment on neural networks?\",\n  \"course_material\": \"Some optional course material.\"\n}"
        },
        "url": {
          "raw": "http://127.0.0.1:8000/assistant",
          "protocol": "http",
          "host": [
            "127",
            "0",
            "0",
            "1"
          ],
          "port": "8000",
          "path": [
            "assistant"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response contains a hint\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.response.toLowerCase()).to.satisfy(function(val) {",
              "         return val.includes(\"consider breaking\") || val.includes(\"hint\");",
              "    });",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Code Completion Request",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"query\": \"Please perform code completion: complete code for a function that adds two numbers.\",\n  \"course_material\": \"Some optional context for code.\"\n}"
        },
        "url": {
          "raw": "http://127.0.0.1:8000/assistant",
          "protocol": "http",
          "host": [
            "127",
            "0",
            "0",
            "1"
          ],
          "port": "8000",
          "path": [
            "assistant"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response contains a completed function\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.response).to.include(\"def completed_function():\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Unclear Query Request",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"query\": \"What is the weather like today?\"\n}"
        },
        "url": {
          "raw": "http://127.0.0.1:8000/assistant",
          "protocol": "http",
          "host": [
            "127",
            "0",
            "0",
            "1"
          ],
          "port": "8000",
          "path": [
            "assistant"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response asks for clarification\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.response.toLowerCase()).to.include(\"please clarify\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Missing Query Field Request",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"course_material\": \"Some optional course material.\"\n}"
        },
        "url": {
          "raw": "http://127.0.0.1:8000/assistant",
          "protocol": "http",
          "host": [
            "127",
            "0",
            "0",
            "1"
          ],
          "port": "8000",
          "path": [
            "assistant"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 422\", function () {",
              "    pm.response.to.have.status(422);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Malformed Request",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "this is not json"
        },
        "url": {
          "raw": "http://127.0.0.1:8000/assistant",
          "protocol": "http",
          "host": [
            "127",
            "0",
            "0",
            "1"
          ],
          "port": "8000",
          "path": [
            "assistant"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 422\", function () {",
              "    pm.response.to.have.status(422);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "File Upload Request",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "file",
              "type": "file",
              "src": "test.txt"
            }
          ]
        },
        "url": {
          "raw": "http://127.0.0.1:8000/upload/",
          "protocol": "http",
          "host": [
            "127",
            "0",
            "0",
            "1"
          ],
          "port": "8000",
          "path": [
            "upload"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "var jsonData = pm.response.json();",
              "pm.test(\"File upload successful\", function () {",
              "    pm.expect(jsonData.message).to.include(\"File received successfully\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Image Recognition Request",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "file",
              "type": "file",
              "src": "image.png"
            }
          ]
        },
        "url": {
          "raw": "http://127.0.0.1:8000/image_recognition",
          "protocol": "http",
          "host": [
            "127",
            "0",
            "0",
            "1"
          ],
          "port": "8000",
          "path": [
            "image_recognition"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "var jsonData = pm.response.json();",
              "pm.test(\"Image recognition response is as expected\", function () {",
              "    pm.expect(jsonData.response.toLowerCase()).to.include(\"recognized text from image\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}
